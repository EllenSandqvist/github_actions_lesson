# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']
    # workflow_dispatch gör att man kan starta körning av workflowet manuellt på github
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        node-version: [18.x, 20.x]

    steps:
      # Checka ut repository-koden
      - uses: actions/checkout@v4

      # Cache node_modules
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: npm-deps-${{ hashFiles('package-lock.json') }}

      # Installera Node.js och npm
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      # Installera alla beroenden
      - name: Install dependencies
        run: npm ci

      # Kör kodformaterare och linter för kodkvalitet
      - name: Run prettier
        run: npm run format

      - name: Run ESLint
        run: npm run lint

      - name: Format code
        run: npm run lint:fix

      # Bygg projektet (om ett byggskript är definierat)
      - name: Build the project
        run: npm run build --if-present

      # Save build artifacts
      - name: Save build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: dist/

      # Migrera databasen till senaste versionen
      - name: migrate database
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: npm run prisma:migrate

      # Generera Prisma-klienten för att interagera med databasen
      - name: prisma generate
        run: npm run postinstall

      # Kör enhetstester för projektet
      - name: Run tests with coverage
        run: npm run test

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      # Get build artifacts
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: dist/
